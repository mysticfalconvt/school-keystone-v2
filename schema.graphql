# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  preferredName: String
  email: String
  password: PasswordState
  taStudents(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  taStudentsCount(where: UserWhereInput! = {}): Int
  taTeacher: User
  parent(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  parentCount(where: UserWhereInput! = {}): Int
  children(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  childrenCount(where: UserWhereInput! = {}): Int
  canManageCalendar: Boolean
  canSeeOtherUsers: Boolean
  canManageUsers: Boolean
  canManageRoles: Boolean
  canManageLinks: Boolean
  canManageDiscipline: Boolean
  canSeeAllDiscipline: Boolean
  canSeeAllTeacherEvents: Boolean
  canSeeStudentEvents: Boolean
  canSeeOwnCallback: Boolean
  canSeeAllCallback: Boolean
  hasTA: Boolean
  hasClasses: Boolean
  isStudent: Boolean
  isParent: Boolean
  isStaff: Boolean
  isTeacher: Boolean
  isGuidance: Boolean
  isSuperAdmin: Boolean
  canManagePbis: Boolean
  canHaveSpecialGroups: Boolean
  block1Teacher: User
  block1Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block1StudentsCount(where: UserWhereInput! = {}): Int
  block2Teacher: User
  block2Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block2StudentsCount(where: UserWhereInput! = {}): Int
  block3Teacher: User
  block3Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block3StudentsCount(where: UserWhereInput! = {}): Int
  block4Teacher: User
  block4Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block4StudentsCount(where: UserWhereInput! = {}): Int
  block5Teacher: User
  block5Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block5StudentsCount(where: UserWhereInput! = {}): Int
  block6Teacher: User
  block6Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block6StudentsCount(where: UserWhereInput! = {}): Int
  block7Teacher: User
  block7Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block7StudentsCount(where: UserWhereInput! = {}): Int
  block8Teacher: User
  block8Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block8StudentsCount(where: UserWhereInput! = {}): Int
  block9Teacher: User
  block9Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block9StudentsCount(where: UserWhereInput! = {}): Int
  block10Teacher: User
  block10Students(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  block10StudentsCount(where: UserWhereInput! = {}): Int
  specialGroupStudents(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  specialGroupStudentsCount(where: UserWhereInput! = {}): Int
  taTeam: PbisTeam
  studentFocusTeacher(where: StudentFocusWhereInput! = {}, orderBy: [StudentFocusOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: StudentFocusWhereUniqueInput): [StudentFocus!]
  studentFocusTeacherCount(where: StudentFocusWhereInput! = {}): Int
  studentFocusStudent(where: StudentFocusWhereInput! = {}, orderBy: [StudentFocusOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: StudentFocusWhereUniqueInput): [StudentFocus!]
  studentFocusStudentCount(where: StudentFocusWhereInput! = {}): Int
  studentCellPhoneViolation(where: CellPhoneViolationWhereInput! = {}, orderBy: [CellPhoneViolationOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CellPhoneViolationWhereUniqueInput): [CellPhoneViolation!]
  studentCellPhoneViolationCount(where: CellPhoneViolationWhereInput! = {}): Int
  teacherCellPhoneViolation(where: CellPhoneViolationWhereInput! = {}, orderBy: [CellPhoneViolationOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CellPhoneViolationWhereUniqueInput): [CellPhoneViolation!]
  teacherCellPhoneViolationCount(where: CellPhoneViolationWhereInput! = {}): Int
  teacherPbisCards(where: PbisCardWhereInput! = {}, orderBy: [PbisCardOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PbisCardWhereUniqueInput): [PbisCard!]
  teacherPbisCardsCount(where: PbisCardWhereInput! = {}): Int
  studentPbisCards(where: PbisCardWhereInput! = {}, orderBy: [PbisCardOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PbisCardWhereUniqueInput): [PbisCard!]
  studentPbisCardsCount(where: PbisCardWhereInput! = {}): Int
  teacherDiscipline(where: DisciplineWhereInput! = {}, orderBy: [DisciplineOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: DisciplineWhereUniqueInput): [Discipline!]
  teacherDisciplineCount(where: DisciplineWhereInput! = {}): Int
  studentDiscipline(where: DisciplineWhereInput! = {}, orderBy: [DisciplineOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: DisciplineWhereUniqueInput): [Discipline!]
  studentDisciplineCount(where: DisciplineWhereInput! = {}): Int
  callbackItems(where: CallbackWhereInput! = {}, orderBy: [CallbackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CallbackWhereUniqueInput): [Callback!]
  callbackItemsCount(where: CallbackWhereInput! = {}): Int
  callbackAssigned(where: CallbackWhereInput! = {}, orderBy: [CallbackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CallbackWhereUniqueInput): [Callback!]
  callbackAssignedCount(where: CallbackWhereInput! = {}): Int
  messageSender(where: MessageWhereInput! = {}, orderBy: [MessageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MessageWhereUniqueInput): [Message!]
  messageSenderCount(where: MessageWhereInput! = {}): Int
  messageReceiver(where: MessageWhereInput! = {}, orderBy: [MessageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MessageWhereUniqueInput): [Message!]
  messageReceiverCount(where: MessageWhereInput! = {}): Int
  currentTaWinner: User
  previousTaWinner: User
  studentIsCurrentWinner: User
  studentIsPreviousWinner: User
  randomDrawingWins(where: RandomDrawingWinWhereInput! = {}, orderBy: [RandomDrawingWinOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: RandomDrawingWinWhereUniqueInput): [RandomDrawingWin!]
  randomDrawingWinsCount(where: RandomDrawingWinWhereInput! = {}): Int
  birthday: Birthday
  individualPbisLevel: Int
  taTeamPbisLevel: Int
  taTeamAveragePbisCardsPerStudent: Int
  chromebookCheck(where: ChromebookAssignmentWhereInput! = {}, orderBy: [ChromebookAssignmentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ChromebookAssignmentWhereUniqueInput): [ChromebookAssignment!]
  chromebookCheckCount(where: ChromebookAssignmentWhereInput! = {}): Int
  callbackCount: Int
  totalCallbackCount: Int
  PbisCardCount: Int
  YearPbisCount: Int
  teacherSubject: String
  taPbisCardCount: Int
  averageTimeToCompleteCallback: Int
  block1Assignment: String
  block1ClassName: String
  block1AssignmentLastUpdated: DateTime
  block2Assignment: String
  block2ClassName: String
  block2AssignmentLastUpdated: DateTime
  block3Assignment: String
  block3ClassName: String
  block3AssignmentLastUpdated: DateTime
  block4Assignment: String
  block4ClassName: String
  block4AssignmentLastUpdated: DateTime
  block5Assignment: String
  block5ClassName: String
  block5AssignmentLastUpdated: DateTime
  block6Assignment: String
  block6ClassName: String
  block6AssignmentLastUpdated: DateTime
  block7Assignment: String
  block7ClassName: String
  block7AssignmentLastUpdated: DateTime
  block8Assignment: String
  block8ClassName: String
  block8AssignmentLastUpdated: DateTime
  block9Assignment: String
  block9ClassName: String
  block9AssignmentLastUpdated: DateTime
  block10Assignment: String
  block10ClassName: String
  block10AssignmentLastUpdated: DateTime
  sortingHat: String
  passwordResetToken: PasswordState
  passwordResetIssuedAt: DateTime
  passwordResetRedeemedAt: DateTime
}

type PasswordState {
  isSet: Boolean!
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  preferredName: StringFilter
  email: StringFilter
  taStudents: UserManyRelationFilter
  taTeacher: UserWhereInput
  parent: UserManyRelationFilter
  children: UserManyRelationFilter
  canManageCalendar: BooleanFilter
  canSeeOtherUsers: BooleanFilter
  canManageUsers: BooleanFilter
  canManageRoles: BooleanFilter
  canManageLinks: BooleanFilter
  canManageDiscipline: BooleanFilter
  canSeeAllDiscipline: BooleanFilter
  canSeeAllTeacherEvents: BooleanFilter
  canSeeStudentEvents: BooleanFilter
  canSeeOwnCallback: BooleanFilter
  canSeeAllCallback: BooleanFilter
  hasTA: BooleanFilter
  hasClasses: BooleanFilter
  isStudent: BooleanFilter
  isParent: BooleanFilter
  isStaff: BooleanFilter
  isTeacher: BooleanFilter
  isGuidance: BooleanFilter
  isSuperAdmin: BooleanFilter
  canManagePbis: BooleanFilter
  canHaveSpecialGroups: BooleanFilter
  block1Teacher: UserWhereInput
  block1Students: UserManyRelationFilter
  block2Teacher: UserWhereInput
  block2Students: UserManyRelationFilter
  block3Teacher: UserWhereInput
  block3Students: UserManyRelationFilter
  block4Teacher: UserWhereInput
  block4Students: UserManyRelationFilter
  block5Teacher: UserWhereInput
  block5Students: UserManyRelationFilter
  block6Teacher: UserWhereInput
  block6Students: UserManyRelationFilter
  block7Teacher: UserWhereInput
  block7Students: UserManyRelationFilter
  block8Teacher: UserWhereInput
  block8Students: UserManyRelationFilter
  block9Teacher: UserWhereInput
  block9Students: UserManyRelationFilter
  block10Teacher: UserWhereInput
  block10Students: UserManyRelationFilter
  specialGroupStudents: UserManyRelationFilter
  taTeam: PbisTeamWhereInput
  studentFocusTeacher: StudentFocusManyRelationFilter
  studentFocusStudent: StudentFocusManyRelationFilter
  studentCellPhoneViolation: CellPhoneViolationManyRelationFilter
  teacherCellPhoneViolation: CellPhoneViolationManyRelationFilter
  teacherPbisCards: PbisCardManyRelationFilter
  studentPbisCards: PbisCardManyRelationFilter
  teacherDiscipline: DisciplineManyRelationFilter
  studentDiscipline: DisciplineManyRelationFilter
  callbackItems: CallbackManyRelationFilter
  callbackAssigned: CallbackManyRelationFilter
  messageSender: MessageManyRelationFilter
  messageReceiver: MessageManyRelationFilter
  currentTaWinner: UserWhereInput
  previousTaWinner: UserWhereInput
  studentIsCurrentWinner: UserWhereInput
  studentIsPreviousWinner: UserWhereInput
  randomDrawingWins: RandomDrawingWinManyRelationFilter
  birthday: BirthdayWhereInput
  individualPbisLevel: IntNullableFilter
  taTeamPbisLevel: IntNullableFilter
  taTeamAveragePbisCardsPerStudent: IntNullableFilter
  chromebookCheck: ChromebookAssignmentManyRelationFilter
  callbackCount: IntNullableFilter
  totalCallbackCount: IntNullableFilter
  PbisCardCount: IntNullableFilter
  YearPbisCount: IntNullableFilter
  teacherSubject: StringFilter
  taPbisCardCount: IntNullableFilter
  averageTimeToCompleteCallback: IntNullableFilter
  block1Assignment: StringFilter
  block1ClassName: StringFilter
  block1AssignmentLastUpdated: DateTimeNullableFilter
  block2Assignment: StringFilter
  block2ClassName: StringFilter
  block2AssignmentLastUpdated: DateTimeNullableFilter
  block3Assignment: StringFilter
  block3ClassName: StringFilter
  block3AssignmentLastUpdated: DateTimeNullableFilter
  block4Assignment: StringFilter
  block4ClassName: StringFilter
  block4AssignmentLastUpdated: DateTimeNullableFilter
  block5Assignment: StringFilter
  block5ClassName: StringFilter
  block5AssignmentLastUpdated: DateTimeNullableFilter
  block6Assignment: StringFilter
  block6ClassName: StringFilter
  block6AssignmentLastUpdated: DateTimeNullableFilter
  block7Assignment: StringFilter
  block7ClassName: StringFilter
  block7AssignmentLastUpdated: DateTimeNullableFilter
  block8Assignment: StringFilter
  block8ClassName: StringFilter
  block8AssignmentLastUpdated: DateTimeNullableFilter
  block9Assignment: StringFilter
  block9ClassName: StringFilter
  block9AssignmentLastUpdated: DateTimeNullableFilter
  block10Assignment: StringFilter
  block10ClassName: StringFilter
  block10AssignmentLastUpdated: DateTimeNullableFilter
  sortingHat: StringFilter
  passwordResetToken: PasswordFilter
  passwordResetIssuedAt: DateTimeNullableFilter
  passwordResetRedeemedAt: DateTimeNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input UserManyRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input StudentFocusManyRelationFilter {
  every: StudentFocusWhereInput
  some: StudentFocusWhereInput
  none: StudentFocusWhereInput
}

input CellPhoneViolationManyRelationFilter {
  every: CellPhoneViolationWhereInput
  some: CellPhoneViolationWhereInput
  none: CellPhoneViolationWhereInput
}

input PbisCardManyRelationFilter {
  every: PbisCardWhereInput
  some: PbisCardWhereInput
  none: PbisCardWhereInput
}

input DisciplineManyRelationFilter {
  every: DisciplineWhereInput
  some: DisciplineWhereInput
  none: DisciplineWhereInput
}

input CallbackManyRelationFilter {
  every: CallbackWhereInput
  some: CallbackWhereInput
  none: CallbackWhereInput
}

input MessageManyRelationFilter {
  every: MessageWhereInput
  some: MessageWhereInput
  none: MessageWhereInput
}

input RandomDrawingWinManyRelationFilter {
  every: RandomDrawingWinWhereInput
  some: RandomDrawingWinWhereInput
  none: RandomDrawingWinWhereInput
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input ChromebookAssignmentManyRelationFilter {
  every: ChromebookAssignmentWhereInput
  some: ChromebookAssignmentWhereInput
  none: ChromebookAssignmentWhereInput
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input PasswordFilter {
  isSet: Boolean!
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  preferredName: OrderDirection
  email: OrderDirection
  canManageCalendar: OrderDirection
  canSeeOtherUsers: OrderDirection
  canManageUsers: OrderDirection
  canManageRoles: OrderDirection
  canManageLinks: OrderDirection
  canManageDiscipline: OrderDirection
  canSeeAllDiscipline: OrderDirection
  canSeeAllTeacherEvents: OrderDirection
  canSeeStudentEvents: OrderDirection
  canSeeOwnCallback: OrderDirection
  canSeeAllCallback: OrderDirection
  hasTA: OrderDirection
  hasClasses: OrderDirection
  isStudent: OrderDirection
  isParent: OrderDirection
  isStaff: OrderDirection
  isTeacher: OrderDirection
  isGuidance: OrderDirection
  isSuperAdmin: OrderDirection
  canManagePbis: OrderDirection
  canHaveSpecialGroups: OrderDirection
  individualPbisLevel: OrderDirection
  taTeamPbisLevel: OrderDirection
  taTeamAveragePbisCardsPerStudent: OrderDirection
  callbackCount: OrderDirection
  totalCallbackCount: OrderDirection
  PbisCardCount: OrderDirection
  YearPbisCount: OrderDirection
  teacherSubject: OrderDirection
  taPbisCardCount: OrderDirection
  averageTimeToCompleteCallback: OrderDirection
  block1Assignment: OrderDirection
  block1ClassName: OrderDirection
  block1AssignmentLastUpdated: OrderDirection
  block2Assignment: OrderDirection
  block2ClassName: OrderDirection
  block2AssignmentLastUpdated: OrderDirection
  block3Assignment: OrderDirection
  block3ClassName: OrderDirection
  block3AssignmentLastUpdated: OrderDirection
  block4Assignment: OrderDirection
  block4ClassName: OrderDirection
  block4AssignmentLastUpdated: OrderDirection
  block5Assignment: OrderDirection
  block5ClassName: OrderDirection
  block5AssignmentLastUpdated: OrderDirection
  block6Assignment: OrderDirection
  block6ClassName: OrderDirection
  block6AssignmentLastUpdated: OrderDirection
  block7Assignment: OrderDirection
  block7ClassName: OrderDirection
  block7AssignmentLastUpdated: OrderDirection
  block8Assignment: OrderDirection
  block8ClassName: OrderDirection
  block8AssignmentLastUpdated: OrderDirection
  block9Assignment: OrderDirection
  block9ClassName: OrderDirection
  block9AssignmentLastUpdated: OrderDirection
  block10Assignment: OrderDirection
  block10ClassName: OrderDirection
  block10AssignmentLastUpdated: OrderDirection
  sortingHat: OrderDirection
  passwordResetIssuedAt: OrderDirection
  passwordResetRedeemedAt: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  preferredName: String
  email: String
  password: String
  taStudents: UserRelateToManyForUpdateInput
  taTeacher: UserRelateToOneForUpdateInput
  parent: UserRelateToManyForUpdateInput
  children: UserRelateToManyForUpdateInput
  canManageCalendar: Boolean
  canSeeOtherUsers: Boolean
  canManageUsers: Boolean
  canManageRoles: Boolean
  canManageLinks: Boolean
  canManageDiscipline: Boolean
  canSeeAllDiscipline: Boolean
  canSeeAllTeacherEvents: Boolean
  canSeeStudentEvents: Boolean
  canSeeOwnCallback: Boolean
  canSeeAllCallback: Boolean
  hasTA: Boolean
  hasClasses: Boolean
  isStudent: Boolean
  isParent: Boolean
  isStaff: Boolean
  isTeacher: Boolean
  isGuidance: Boolean
  isSuperAdmin: Boolean
  canManagePbis: Boolean
  canHaveSpecialGroups: Boolean
  block1Teacher: UserRelateToOneForUpdateInput
  block1Students: UserRelateToManyForUpdateInput
  block2Teacher: UserRelateToOneForUpdateInput
  block2Students: UserRelateToManyForUpdateInput
  block3Teacher: UserRelateToOneForUpdateInput
  block3Students: UserRelateToManyForUpdateInput
  block4Teacher: UserRelateToOneForUpdateInput
  block4Students: UserRelateToManyForUpdateInput
  block5Teacher: UserRelateToOneForUpdateInput
  block5Students: UserRelateToManyForUpdateInput
  block6Teacher: UserRelateToOneForUpdateInput
  block6Students: UserRelateToManyForUpdateInput
  block7Teacher: UserRelateToOneForUpdateInput
  block7Students: UserRelateToManyForUpdateInput
  block8Teacher: UserRelateToOneForUpdateInput
  block8Students: UserRelateToManyForUpdateInput
  block9Teacher: UserRelateToOneForUpdateInput
  block9Students: UserRelateToManyForUpdateInput
  block10Teacher: UserRelateToOneForUpdateInput
  block10Students: UserRelateToManyForUpdateInput
  specialGroupStudents: UserRelateToManyForUpdateInput
  taTeam: PbisTeamRelateToOneForUpdateInput
  studentFocusTeacher: StudentFocusRelateToManyForUpdateInput
  studentFocusStudent: StudentFocusRelateToManyForUpdateInput
  studentCellPhoneViolation: CellPhoneViolationRelateToManyForUpdateInput
  teacherCellPhoneViolation: CellPhoneViolationRelateToManyForUpdateInput
  teacherPbisCards: PbisCardRelateToManyForUpdateInput
  studentPbisCards: PbisCardRelateToManyForUpdateInput
  teacherDiscipline: DisciplineRelateToManyForUpdateInput
  studentDiscipline: DisciplineRelateToManyForUpdateInput
  callbackItems: CallbackRelateToManyForUpdateInput
  callbackAssigned: CallbackRelateToManyForUpdateInput
  messageSender: MessageRelateToManyForUpdateInput
  messageReceiver: MessageRelateToManyForUpdateInput
  currentTaWinner: UserRelateToOneForUpdateInput
  previousTaWinner: UserRelateToOneForUpdateInput
  studentIsCurrentWinner: UserRelateToOneForUpdateInput
  studentIsPreviousWinner: UserRelateToOneForUpdateInput
  randomDrawingWins: RandomDrawingWinRelateToManyForUpdateInput
  birthday: BirthdayRelateToOneForUpdateInput
  individualPbisLevel: Int
  taTeamPbisLevel: Int
  taTeamAveragePbisCardsPerStudent: Int
  chromebookCheck: ChromebookAssignmentRelateToManyForUpdateInput
  callbackCount: Int
  totalCallbackCount: Int
  PbisCardCount: Int
  YearPbisCount: Int
  teacherSubject: String
  taPbisCardCount: Int
  averageTimeToCompleteCallback: Int
  block1Assignment: String
  block1ClassName: String
  block1AssignmentLastUpdated: DateTime
  block2Assignment: String
  block2ClassName: String
  block2AssignmentLastUpdated: DateTime
  block3Assignment: String
  block3ClassName: String
  block3AssignmentLastUpdated: DateTime
  block4Assignment: String
  block4ClassName: String
  block4AssignmentLastUpdated: DateTime
  block5Assignment: String
  block5ClassName: String
  block5AssignmentLastUpdated: DateTime
  block6Assignment: String
  block6ClassName: String
  block6AssignmentLastUpdated: DateTime
  block7Assignment: String
  block7ClassName: String
  block7AssignmentLastUpdated: DateTime
  block8Assignment: String
  block8ClassName: String
  block8AssignmentLastUpdated: DateTime
  block9Assignment: String
  block9ClassName: String
  block9AssignmentLastUpdated: DateTime
  block10Assignment: String
  block10ClassName: String
  block10AssignmentLastUpdated: DateTime
  sortingHat: String
  passwordResetToken: String
  passwordResetIssuedAt: DateTime
  passwordResetRedeemedAt: DateTime
}

input UserRelateToManyForUpdateInput {
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input PbisTeamRelateToOneForUpdateInput {
  create: PbisTeamCreateInput
  connect: PbisTeamWhereUniqueInput
  disconnect: Boolean
}

input StudentFocusRelateToManyForUpdateInput {
  disconnect: [StudentFocusWhereUniqueInput!]
  set: [StudentFocusWhereUniqueInput!]
  create: [StudentFocusCreateInput!]
  connect: [StudentFocusWhereUniqueInput!]
}

input CellPhoneViolationRelateToManyForUpdateInput {
  disconnect: [CellPhoneViolationWhereUniqueInput!]
  set: [CellPhoneViolationWhereUniqueInput!]
  create: [CellPhoneViolationCreateInput!]
  connect: [CellPhoneViolationWhereUniqueInput!]
}

input PbisCardRelateToManyForUpdateInput {
  disconnect: [PbisCardWhereUniqueInput!]
  set: [PbisCardWhereUniqueInput!]
  create: [PbisCardCreateInput!]
  connect: [PbisCardWhereUniqueInput!]
}

input DisciplineRelateToManyForUpdateInput {
  disconnect: [DisciplineWhereUniqueInput!]
  set: [DisciplineWhereUniqueInput!]
  create: [DisciplineCreateInput!]
  connect: [DisciplineWhereUniqueInput!]
}

input CallbackRelateToManyForUpdateInput {
  disconnect: [CallbackWhereUniqueInput!]
  set: [CallbackWhereUniqueInput!]
  create: [CallbackCreateInput!]
  connect: [CallbackWhereUniqueInput!]
}

input MessageRelateToManyForUpdateInput {
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  create: [MessageCreateInput!]
  connect: [MessageWhereUniqueInput!]
}

input RandomDrawingWinRelateToManyForUpdateInput {
  disconnect: [RandomDrawingWinWhereUniqueInput!]
  set: [RandomDrawingWinWhereUniqueInput!]
  create: [RandomDrawingWinCreateInput!]
  connect: [RandomDrawingWinWhereUniqueInput!]
}

input BirthdayRelateToOneForUpdateInput {
  create: BirthdayCreateInput
  connect: BirthdayWhereUniqueInput
  disconnect: Boolean
}

input ChromebookAssignmentRelateToManyForUpdateInput {
  disconnect: [ChromebookAssignmentWhereUniqueInput!]
  set: [ChromebookAssignmentWhereUniqueInput!]
  create: [ChromebookAssignmentCreateInput!]
  connect: [ChromebookAssignmentWhereUniqueInput!]
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  preferredName: String
  email: String
  password: String
  taStudents: UserRelateToManyForCreateInput
  taTeacher: UserRelateToOneForCreateInput
  parent: UserRelateToManyForCreateInput
  children: UserRelateToManyForCreateInput
  canManageCalendar: Boolean
  canSeeOtherUsers: Boolean
  canManageUsers: Boolean
  canManageRoles: Boolean
  canManageLinks: Boolean
  canManageDiscipline: Boolean
  canSeeAllDiscipline: Boolean
  canSeeAllTeacherEvents: Boolean
  canSeeStudentEvents: Boolean
  canSeeOwnCallback: Boolean
  canSeeAllCallback: Boolean
  hasTA: Boolean
  hasClasses: Boolean
  isStudent: Boolean
  isParent: Boolean
  isStaff: Boolean
  isTeacher: Boolean
  isGuidance: Boolean
  isSuperAdmin: Boolean
  canManagePbis: Boolean
  canHaveSpecialGroups: Boolean
  block1Teacher: UserRelateToOneForCreateInput
  block1Students: UserRelateToManyForCreateInput
  block2Teacher: UserRelateToOneForCreateInput
  block2Students: UserRelateToManyForCreateInput
  block3Teacher: UserRelateToOneForCreateInput
  block3Students: UserRelateToManyForCreateInput
  block4Teacher: UserRelateToOneForCreateInput
  block4Students: UserRelateToManyForCreateInput
  block5Teacher: UserRelateToOneForCreateInput
  block5Students: UserRelateToManyForCreateInput
  block6Teacher: UserRelateToOneForCreateInput
  block6Students: UserRelateToManyForCreateInput
  block7Teacher: UserRelateToOneForCreateInput
  block7Students: UserRelateToManyForCreateInput
  block8Teacher: UserRelateToOneForCreateInput
  block8Students: UserRelateToManyForCreateInput
  block9Teacher: UserRelateToOneForCreateInput
  block9Students: UserRelateToManyForCreateInput
  block10Teacher: UserRelateToOneForCreateInput
  block10Students: UserRelateToManyForCreateInput
  specialGroupStudents: UserRelateToManyForCreateInput
  taTeam: PbisTeamRelateToOneForCreateInput
  studentFocusTeacher: StudentFocusRelateToManyForCreateInput
  studentFocusStudent: StudentFocusRelateToManyForCreateInput
  studentCellPhoneViolation: CellPhoneViolationRelateToManyForCreateInput
  teacherCellPhoneViolation: CellPhoneViolationRelateToManyForCreateInput
  teacherPbisCards: PbisCardRelateToManyForCreateInput
  studentPbisCards: PbisCardRelateToManyForCreateInput
  teacherDiscipline: DisciplineRelateToManyForCreateInput
  studentDiscipline: DisciplineRelateToManyForCreateInput
  callbackItems: CallbackRelateToManyForCreateInput
  callbackAssigned: CallbackRelateToManyForCreateInput
  messageSender: MessageRelateToManyForCreateInput
  messageReceiver: MessageRelateToManyForCreateInput
  currentTaWinner: UserRelateToOneForCreateInput
  previousTaWinner: UserRelateToOneForCreateInput
  studentIsCurrentWinner: UserRelateToOneForCreateInput
  studentIsPreviousWinner: UserRelateToOneForCreateInput
  randomDrawingWins: RandomDrawingWinRelateToManyForCreateInput
  birthday: BirthdayRelateToOneForCreateInput
  individualPbisLevel: Int
  taTeamPbisLevel: Int
  taTeamAveragePbisCardsPerStudent: Int
  chromebookCheck: ChromebookAssignmentRelateToManyForCreateInput
  callbackCount: Int
  totalCallbackCount: Int
  PbisCardCount: Int
  YearPbisCount: Int
  teacherSubject: String
  taPbisCardCount: Int
  averageTimeToCompleteCallback: Int
  block1Assignment: String
  block1ClassName: String
  block1AssignmentLastUpdated: DateTime
  block2Assignment: String
  block2ClassName: String
  block2AssignmentLastUpdated: DateTime
  block3Assignment: String
  block3ClassName: String
  block3AssignmentLastUpdated: DateTime
  block4Assignment: String
  block4ClassName: String
  block4AssignmentLastUpdated: DateTime
  block5Assignment: String
  block5ClassName: String
  block5AssignmentLastUpdated: DateTime
  block6Assignment: String
  block6ClassName: String
  block6AssignmentLastUpdated: DateTime
  block7Assignment: String
  block7ClassName: String
  block7AssignmentLastUpdated: DateTime
  block8Assignment: String
  block8ClassName: String
  block8AssignmentLastUpdated: DateTime
  block9Assignment: String
  block9ClassName: String
  block9AssignmentLastUpdated: DateTime
  block10Assignment: String
  block10ClassName: String
  block10AssignmentLastUpdated: DateTime
  sortingHat: String
  passwordResetToken: String
  passwordResetIssuedAt: DateTime
  passwordResetRedeemedAt: DateTime
}

input UserRelateToManyForCreateInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input PbisTeamRelateToOneForCreateInput {
  create: PbisTeamCreateInput
  connect: PbisTeamWhereUniqueInput
}

input StudentFocusRelateToManyForCreateInput {
  create: [StudentFocusCreateInput!]
  connect: [StudentFocusWhereUniqueInput!]
}

input CellPhoneViolationRelateToManyForCreateInput {
  create: [CellPhoneViolationCreateInput!]
  connect: [CellPhoneViolationWhereUniqueInput!]
}

input PbisCardRelateToManyForCreateInput {
  create: [PbisCardCreateInput!]
  connect: [PbisCardWhereUniqueInput!]
}

input DisciplineRelateToManyForCreateInput {
  create: [DisciplineCreateInput!]
  connect: [DisciplineWhereUniqueInput!]
}

input CallbackRelateToManyForCreateInput {
  create: [CallbackCreateInput!]
  connect: [CallbackWhereUniqueInput!]
}

input MessageRelateToManyForCreateInput {
  create: [MessageCreateInput!]
  connect: [MessageWhereUniqueInput!]
}

input RandomDrawingWinRelateToManyForCreateInput {
  create: [RandomDrawingWinCreateInput!]
  connect: [RandomDrawingWinWhereUniqueInput!]
}

input BirthdayRelateToOneForCreateInput {
  create: BirthdayCreateInput
  connect: BirthdayWhereUniqueInput
}

input ChromebookAssignmentRelateToManyForCreateInput {
  create: [ChromebookAssignmentCreateInput!]
  connect: [ChromebookAssignmentWhereUniqueInput!]
}

type Birthday {
  id: ID!
  cakeType: String
  date: DateTime
  hasChosen: Boolean
  hasDelivered: Boolean
  student: User
}

input BirthdayWhereUniqueInput {
  id: ID
}

input BirthdayWhereInput {
  AND: [BirthdayWhereInput!]
  OR: [BirthdayWhereInput!]
  NOT: [BirthdayWhereInput!]
  id: IDFilter
  cakeType: StringFilter
  date: DateTimeNullableFilter
  hasChosen: BooleanFilter
  hasDelivered: BooleanFilter
  student: UserWhereInput
}

input BirthdayOrderByInput {
  id: OrderDirection
  cakeType: OrderDirection
  date: OrderDirection
  hasChosen: OrderDirection
  hasDelivered: OrderDirection
}

input BirthdayUpdateInput {
  cakeType: String
  date: DateTime
  hasChosen: Boolean
  hasDelivered: Boolean
  student: UserRelateToOneForUpdateInput
}

input BirthdayUpdateArgs {
  where: BirthdayWhereUniqueInput!
  data: BirthdayUpdateInput!
}

input BirthdayCreateInput {
  cakeType: String
  date: DateTime
  hasChosen: Boolean
  hasDelivered: Boolean
  student: UserRelateToOneForCreateInput
}

type BugReport {
  id: ID!
  name: String
  description: String
  submittedBy: User
  date: DateTime
  read: Boolean
}

input BugReportWhereUniqueInput {
  id: ID
}

input BugReportWhereInput {
  AND: [BugReportWhereInput!]
  OR: [BugReportWhereInput!]
  NOT: [BugReportWhereInput!]
  id: IDFilter
  name: StringFilter
  description: StringFilter
  submittedBy: UserWhereInput
  date: DateTimeFilter
  read: BooleanFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeFilter
}

input BugReportOrderByInput {
  id: OrderDirection
  name: OrderDirection
  description: OrderDirection
  date: OrderDirection
  read: OrderDirection
}

input BugReportUpdateInput {
  name: String
  description: String
  submittedBy: UserRelateToOneForUpdateInput
  date: DateTime
  read: Boolean
}

input BugReportUpdateArgs {
  where: BugReportWhereUniqueInput!
  data: BugReportUpdateInput!
}

input BugReportCreateInput {
  name: String
  description: String
  submittedBy: UserRelateToOneForCreateInput
  date: DateTime
  read: Boolean
}

type Bullying {
  id: ID!
  studentOffender: User
  teacherAuthor: User
  dateReported: DateTime
  dateOfEvent: DateTime
  investigationDate: DateTime
  studentReporter: String
  employeeWitness: String
  studentWitness: String
  studentsInterviewed: String
  initialActions: String
  nextSteps: String
  reporter: String
  description: String
  determination: String
  determinationDate: DateTime
  determinationExplanation: String
  assignmentInvestigator: String
}

input BullyingWhereUniqueInput {
  id: ID
}

input BullyingWhereInput {
  AND: [BullyingWhereInput!]
  OR: [BullyingWhereInput!]
  NOT: [BullyingWhereInput!]
  id: IDFilter
  studentOffender: UserWhereInput
  teacherAuthor: UserWhereInput
  dateReported: DateTimeFilter
  dateOfEvent: DateTimeFilter
  investigationDate: DateTimeFilter
  studentReporter: StringFilter
  employeeWitness: StringFilter
  studentWitness: StringFilter
  studentsInterviewed: StringFilter
  initialActions: StringFilter
  nextSteps: StringFilter
  reporter: StringFilter
  description: StringFilter
  determination: StringNullableFilter
  determinationDate: DateTimeFilter
  determinationExplanation: StringFilter
  assignmentInvestigator: StringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: StringNullableFilter
}

input BullyingOrderByInput {
  id: OrderDirection
  dateReported: OrderDirection
  dateOfEvent: OrderDirection
  investigationDate: OrderDirection
  studentReporter: OrderDirection
  employeeWitness: OrderDirection
  studentWitness: OrderDirection
  studentsInterviewed: OrderDirection
  initialActions: OrderDirection
  nextSteps: OrderDirection
  reporter: OrderDirection
  description: OrderDirection
  determination: OrderDirection
  determinationDate: OrderDirection
  determinationExplanation: OrderDirection
  assignmentInvestigator: OrderDirection
}

input BullyingUpdateInput {
  studentOffender: UserRelateToOneForUpdateInput
  teacherAuthor: UserRelateToOneForUpdateInput
  dateReported: DateTime
  dateOfEvent: DateTime
  investigationDate: DateTime
  studentReporter: String
  employeeWitness: String
  studentWitness: String
  studentsInterviewed: String
  initialActions: String
  nextSteps: String
  reporter: String
  description: String
  determination: String
  determinationDate: DateTime
  determinationExplanation: String
  assignmentInvestigator: String
}

input BullyingUpdateArgs {
  where: BullyingWhereUniqueInput!
  data: BullyingUpdateInput!
}

input BullyingCreateInput {
  studentOffender: UserRelateToOneForCreateInput
  teacherAuthor: UserRelateToOneForCreateInput
  dateReported: DateTime
  dateOfEvent: DateTime
  investigationDate: DateTime
  studentReporter: String
  employeeWitness: String
  studentWitness: String
  studentsInterviewed: String
  initialActions: String
  nextSteps: String
  reporter: String
  description: String
  determination: String
  determinationDate: DateTime
  determinationExplanation: String
  assignmentInvestigator: String
}

type Callback {
  id: ID!
  title: String
  description: String
  student: User
  teacher: User
  dateAssigned: DateTime
  dateCompleted: DateTime
  link: String
  messageFromTeacher: String
  messageFromTeacherDate: String
  messageFromStudent: String
  messageFromStudentDate: String
  daysLate: Int
}

input CallbackWhereUniqueInput {
  id: ID
}

input CallbackWhereInput {
  AND: [CallbackWhereInput!]
  OR: [CallbackWhereInput!]
  NOT: [CallbackWhereInput!]
  id: IDFilter
  title: StringFilter
  description: StringFilter
  student: UserWhereInput
  teacher: UserWhereInput
  dateAssigned: DateTimeFilter
  dateCompleted: DateTimeNullableFilter
  link: StringFilter
  messageFromTeacher: StringFilter
  messageFromTeacherDate: StringFilter
  messageFromStudent: StringFilter
  messageFromStudentDate: StringFilter
  daysLate: IntNullableFilter
}

input CallbackOrderByInput {
  id: OrderDirection
  title: OrderDirection
  description: OrderDirection
  dateAssigned: OrderDirection
  dateCompleted: OrderDirection
  link: OrderDirection
  messageFromTeacher: OrderDirection
  messageFromTeacherDate: OrderDirection
  messageFromStudent: OrderDirection
  messageFromStudentDate: OrderDirection
  daysLate: OrderDirection
}

input CallbackUpdateInput {
  title: String
  description: String
  student: UserRelateToOneForUpdateInput
  teacher: UserRelateToOneForUpdateInput
  dateAssigned: DateTime
  dateCompleted: DateTime
  link: String
  messageFromTeacher: String
  messageFromTeacherDate: String
  messageFromStudent: String
  messageFromStudentDate: String
  daysLate: Int
}

input CallbackUpdateArgs {
  where: CallbackWhereUniqueInput!
  data: CallbackUpdateInput!
}

input CallbackCreateInput {
  title: String
  description: String
  student: UserRelateToOneForCreateInput
  teacher: UserRelateToOneForCreateInput
  dateAssigned: DateTime
  dateCompleted: DateTime
  link: String
  messageFromTeacher: String
  messageFromTeacherDate: String
  messageFromStudent: String
  messageFromStudentDate: String
  daysLate: Int
}

type Calendar {
  id: ID!
  name: String
  description: String
  status: String
  date: DateTime
  author: User
  dateCreated: DateTime
  link: String
  linkTitle: String
}

input CalendarWhereUniqueInput {
  id: ID
}

input CalendarWhereInput {
  AND: [CalendarWhereInput!]
  OR: [CalendarWhereInput!]
  NOT: [CalendarWhereInput!]
  id: IDFilter
  name: StringFilter
  description: StringFilter
  status: StringFilter
  date: DateTimeFilter
  author: UserWhereInput
  dateCreated: DateTimeFilter
  link: StringFilter
  linkTitle: StringFilter
}

input CalendarOrderByInput {
  id: OrderDirection
  name: OrderDirection
  description: OrderDirection
  status: OrderDirection
  date: OrderDirection
  dateCreated: OrderDirection
  link: OrderDirection
  linkTitle: OrderDirection
}

input CalendarUpdateInput {
  name: String
  description: String
  status: String
  date: DateTime
  author: UserRelateToOneForUpdateInput
  dateCreated: DateTime
  link: String
  linkTitle: String
}

input CalendarUpdateArgs {
  where: CalendarWhereUniqueInput!
  data: CalendarUpdateInput!
}

input CalendarCreateInput {
  name: String
  description: String
  status: String
  date: DateTime
  author: UserRelateToOneForCreateInput
  dateCreated: DateTime
  link: String
  linkTitle: String
}

type CellPhoneViolation {
  id: ID!
  description: String
  student: User
  teacher: User
  dateGiven: DateTime
}

input CellPhoneViolationWhereUniqueInput {
  id: ID
}

input CellPhoneViolationWhereInput {
  AND: [CellPhoneViolationWhereInput!]
  OR: [CellPhoneViolationWhereInput!]
  NOT: [CellPhoneViolationWhereInput!]
  id: IDFilter
  description: StringFilter
  student: UserWhereInput
  teacher: UserWhereInput
  dateGiven: DateTimeFilter
}

input CellPhoneViolationOrderByInput {
  id: OrderDirection
  description: OrderDirection
  dateGiven: OrderDirection
}

input CellPhoneViolationUpdateInput {
  description: String
  student: UserRelateToOneForUpdateInput
  teacher: UserRelateToOneForUpdateInput
  dateGiven: DateTime
}

input CellPhoneViolationUpdateArgs {
  where: CellPhoneViolationWhereUniqueInput!
  data: CellPhoneViolationUpdateInput!
}

input CellPhoneViolationCreateInput {
  description: String
  student: UserRelateToOneForCreateInput
  teacher: UserRelateToOneForCreateInput
  dateGiven: DateTime
}

type ChromebookCheck {
  id: ID!
  time: DateTime
  assignment: ChromebookAssignment
  message: String
}

input ChromebookCheckWhereUniqueInput {
  id: ID
}

input ChromebookCheckWhereInput {
  AND: [ChromebookCheckWhereInput!]
  OR: [ChromebookCheckWhereInput!]
  NOT: [ChromebookCheckWhereInput!]
  id: IDFilter
  time: DateTimeFilter
  assignment: ChromebookAssignmentWhereInput
  message: StringFilter
}

input ChromebookCheckOrderByInput {
  id: OrderDirection
  time: OrderDirection
  message: OrderDirection
}

input ChromebookCheckUpdateInput {
  time: DateTime
  assignment: ChromebookAssignmentRelateToOneForUpdateInput
  message: String
}

input ChromebookAssignmentRelateToOneForUpdateInput {
  create: ChromebookAssignmentCreateInput
  connect: ChromebookAssignmentWhereUniqueInput
  disconnect: Boolean
}

input ChromebookCheckUpdateArgs {
  where: ChromebookCheckWhereUniqueInput!
  data: ChromebookCheckUpdateInput!
}

input ChromebookCheckCreateInput {
  time: DateTime
  assignment: ChromebookAssignmentRelateToOneForCreateInput
  message: String
}

input ChromebookAssignmentRelateToOneForCreateInput {
  create: ChromebookAssignmentCreateInput
  connect: ChromebookAssignmentWhereUniqueInput
}

type ChromebookAssignment {
  id: ID!
  teacher: User
  student: User
  number: String
  checkLog(where: ChromebookCheckWhereInput! = {}, orderBy: [ChromebookCheckOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ChromebookCheckWhereUniqueInput): [ChromebookCheck!]
  checkLogCount(where: ChromebookCheckWhereInput! = {}): Int
}

input ChromebookAssignmentWhereUniqueInput {
  id: ID
}

input ChromebookAssignmentWhereInput {
  AND: [ChromebookAssignmentWhereInput!]
  OR: [ChromebookAssignmentWhereInput!]
  NOT: [ChromebookAssignmentWhereInput!]
  id: IDFilter
  teacher: UserWhereInput
  student: UserWhereInput
  number: StringFilter
  checkLog: ChromebookCheckManyRelationFilter
}

input ChromebookCheckManyRelationFilter {
  every: ChromebookCheckWhereInput
  some: ChromebookCheckWhereInput
  none: ChromebookCheckWhereInput
}

input ChromebookAssignmentOrderByInput {
  id: OrderDirection
  number: OrderDirection
}

input ChromebookAssignmentUpdateInput {
  teacher: UserRelateToOneForUpdateInput
  student: UserRelateToOneForUpdateInput
  number: String
  checkLog: ChromebookCheckRelateToManyForUpdateInput
}

input ChromebookCheckRelateToManyForUpdateInput {
  disconnect: [ChromebookCheckWhereUniqueInput!]
  set: [ChromebookCheckWhereUniqueInput!]
  create: [ChromebookCheckCreateInput!]
  connect: [ChromebookCheckWhereUniqueInput!]
}

input ChromebookAssignmentUpdateArgs {
  where: ChromebookAssignmentWhereUniqueInput!
  data: ChromebookAssignmentUpdateInput!
}

input ChromebookAssignmentCreateInput {
  teacher: UserRelateToOneForCreateInput
  student: UserRelateToOneForCreateInput
  number: String
  checkLog: ChromebookCheckRelateToManyForCreateInput
}

input ChromebookCheckRelateToManyForCreateInput {
  create: [ChromebookCheckCreateInput!]
  connect: [ChromebookCheckWhereUniqueInput!]
}

type Discipline {
  id: ID!
  teacherComments: String
  adminComments: String
  classType: String
  location: String
  timeOfDay: String
  student: User
  teacher: User
  date: DateTime
  addressed: DateTime
  inappropriateLanguage: Boolean
  physicalConduct: Boolean
  nonCompliance: Boolean
  disruption: Boolean
  propertyMisuse: Boolean
  otherConduct: Boolean
  VerbalWarning: Boolean
  buddyRoom: Boolean
  conferenceWithStudent: Boolean
  ParentContact: Boolean
  PlanningRoomReferral: Boolean
  FollowupPlan: Boolean
  LossOfPrivilege: Boolean
  DetentionWithTeacher: Boolean
  IndividualizedInstruction: Boolean
  GuidanceReferral: Boolean
  ReferToAdministrator: Boolean
  OtherAction: Boolean
  none: Boolean
  peers: Boolean
  teacherInvolved: Boolean
  substitute: Boolean
  unknown: Boolean
  othersInvolved: Boolean
}

input DisciplineWhereUniqueInput {
  id: ID
}

input DisciplineWhereInput {
  AND: [DisciplineWhereInput!]
  OR: [DisciplineWhereInput!]
  NOT: [DisciplineWhereInput!]
  id: IDFilter
  teacherComments: StringFilter
  adminComments: StringFilter
  classType: StringNullableFilter
  location: StringNullableFilter
  timeOfDay: StringNullableFilter
  student: UserWhereInput
  teacher: UserWhereInput
  date: DateTimeFilter
  addressed: DateTimeFilter
  inappropriateLanguage: BooleanFilter
  physicalConduct: BooleanFilter
  nonCompliance: BooleanFilter
  disruption: BooleanFilter
  propertyMisuse: BooleanFilter
  otherConduct: BooleanFilter
  VerbalWarning: BooleanFilter
  buddyRoom: BooleanFilter
  conferenceWithStudent: BooleanFilter
  ParentContact: BooleanFilter
  PlanningRoomReferral: BooleanFilter
  FollowupPlan: BooleanFilter
  LossOfPrivilege: BooleanFilter
  DetentionWithTeacher: BooleanFilter
  IndividualizedInstruction: BooleanFilter
  GuidanceReferral: BooleanFilter
  ReferToAdministrator: BooleanFilter
  OtherAction: BooleanFilter
  none: BooleanFilter
  peers: BooleanFilter
  teacherInvolved: BooleanFilter
  substitute: BooleanFilter
  unknown: BooleanFilter
  othersInvolved: BooleanFilter
}

input DisciplineOrderByInput {
  id: OrderDirection
  teacherComments: OrderDirection
  adminComments: OrderDirection
  classType: OrderDirection
  location: OrderDirection
  timeOfDay: OrderDirection
  date: OrderDirection
  addressed: OrderDirection
  inappropriateLanguage: OrderDirection
  physicalConduct: OrderDirection
  nonCompliance: OrderDirection
  disruption: OrderDirection
  propertyMisuse: OrderDirection
  otherConduct: OrderDirection
  VerbalWarning: OrderDirection
  buddyRoom: OrderDirection
  conferenceWithStudent: OrderDirection
  ParentContact: OrderDirection
  PlanningRoomReferral: OrderDirection
  FollowupPlan: OrderDirection
  LossOfPrivilege: OrderDirection
  DetentionWithTeacher: OrderDirection
  IndividualizedInstruction: OrderDirection
  GuidanceReferral: OrderDirection
  ReferToAdministrator: OrderDirection
  OtherAction: OrderDirection
  none: OrderDirection
  peers: OrderDirection
  teacherInvolved: OrderDirection
  substitute: OrderDirection
  unknown: OrderDirection
  othersInvolved: OrderDirection
}

input DisciplineUpdateInput {
  teacherComments: String
  adminComments: String
  classType: String
  location: String
  timeOfDay: String
  student: UserRelateToOneForUpdateInput
  teacher: UserRelateToOneForUpdateInput
  date: DateTime
  addressed: DateTime
  inappropriateLanguage: Boolean
  physicalConduct: Boolean
  nonCompliance: Boolean
  disruption: Boolean
  propertyMisuse: Boolean
  otherConduct: Boolean
  VerbalWarning: Boolean
  buddyRoom: Boolean
  conferenceWithStudent: Boolean
  ParentContact: Boolean
  PlanningRoomReferral: Boolean
  FollowupPlan: Boolean
  LossOfPrivilege: Boolean
  DetentionWithTeacher: Boolean
  IndividualizedInstruction: Boolean
  GuidanceReferral: Boolean
  ReferToAdministrator: Boolean
  OtherAction: Boolean
  none: Boolean
  peers: Boolean
  teacherInvolved: Boolean
  substitute: Boolean
  unknown: Boolean
  othersInvolved: Boolean
}

input DisciplineUpdateArgs {
  where: DisciplineWhereUniqueInput!
  data: DisciplineUpdateInput!
}

input DisciplineCreateInput {
  teacherComments: String
  adminComments: String
  classType: String
  location: String
  timeOfDay: String
  student: UserRelateToOneForCreateInput
  teacher: UserRelateToOneForCreateInput
  date: DateTime
  addressed: DateTime
  inappropriateLanguage: Boolean
  physicalConduct: Boolean
  nonCompliance: Boolean
  disruption: Boolean
  propertyMisuse: Boolean
  otherConduct: Boolean
  VerbalWarning: Boolean
  buddyRoom: Boolean
  conferenceWithStudent: Boolean
  ParentContact: Boolean
  PlanningRoomReferral: Boolean
  FollowupPlan: Boolean
  LossOfPrivilege: Boolean
  DetentionWithTeacher: Boolean
  IndividualizedInstruction: Boolean
  GuidanceReferral: Boolean
  ReferToAdministrator: Boolean
  OtherAction: Boolean
  none: Boolean
  peers: Boolean
  teacherInvolved: Boolean
  substitute: Boolean
  unknown: Boolean
  othersInvolved: Boolean
}

type Link {
  id: ID!
  name: String
  description: String
  forTeachers: Boolean
  forStudents: Boolean
  forParents: Boolean
  onHomePage: Boolean
  forPbis: Boolean
  forEPortfolio: Boolean
  modifiedBy: User
  modified: DateTime
  link: String
}

input LinkWhereUniqueInput {
  id: ID
}

input LinkWhereInput {
  AND: [LinkWhereInput!]
  OR: [LinkWhereInput!]
  NOT: [LinkWhereInput!]
  id: IDFilter
  name: StringFilter
  description: StringFilter
  forTeachers: BooleanFilter
  forStudents: BooleanFilter
  forParents: BooleanFilter
  onHomePage: BooleanFilter
  forPbis: BooleanFilter
  forEPortfolio: BooleanFilter
  modifiedBy: UserWhereInput
  modified: DateTimeFilter
  link: StringFilter
}

input LinkOrderByInput {
  id: OrderDirection
  name: OrderDirection
  description: OrderDirection
  forTeachers: OrderDirection
  forStudents: OrderDirection
  forParents: OrderDirection
  onHomePage: OrderDirection
  forPbis: OrderDirection
  forEPortfolio: OrderDirection
  modified: OrderDirection
  link: OrderDirection
}

input LinkUpdateInput {
  name: String
  description: String
  forTeachers: Boolean
  forStudents: Boolean
  forParents: Boolean
  onHomePage: Boolean
  forPbis: Boolean
  forEPortfolio: Boolean
  modifiedBy: UserRelateToOneForUpdateInput
  modified: DateTime
  link: String
}

input LinkUpdateArgs {
  where: LinkWhereUniqueInput!
  data: LinkUpdateInput!
}

input LinkCreateInput {
  name: String
  description: String
  forTeachers: Boolean
  forStudents: Boolean
  forParents: Boolean
  onHomePage: Boolean
  forPbis: Boolean
  forEPortfolio: Boolean
  modifiedBy: UserRelateToOneForCreateInput
  modified: DateTime
  link: String
}

type Message {
  id: ID!
  subject: String
  message: String
  sender: User
  receiver: User
  sent: DateTime
  read: Boolean
  link: String
}

input MessageWhereUniqueInput {
  id: ID
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
  id: IDFilter
  subject: StringFilter
  message: StringFilter
  sender: UserWhereInput
  receiver: UserWhereInput
  sent: DateTimeFilter
  read: BooleanFilter
  link: StringFilter
}

input MessageOrderByInput {
  id: OrderDirection
  subject: OrderDirection
  message: OrderDirection
  sent: OrderDirection
  read: OrderDirection
  link: OrderDirection
}

input MessageUpdateInput {
  subject: String
  message: String
  sender: UserRelateToOneForUpdateInput
  receiver: UserRelateToOneForUpdateInput
  sent: DateTime
  read: Boolean
  link: String
}

input MessageUpdateArgs {
  where: MessageWhereUniqueInput!
  data: MessageUpdateInput!
}

input MessageCreateInput {
  subject: String
  message: String
  sender: UserRelateToOneForCreateInput
  receiver: UserRelateToOneForCreateInput
  sent: DateTime
  read: Boolean
  link: String
}

type PbisCard {
  id: ID!
  category: String
  cardMessage: String
  student: User
  teacher: User
  dateGiven: DateTime
  counted: Boolean
}

input PbisCardWhereUniqueInput {
  id: ID
}

input PbisCardWhereInput {
  AND: [PbisCardWhereInput!]
  OR: [PbisCardWhereInput!]
  NOT: [PbisCardWhereInput!]
  id: IDFilter
  category: StringFilter
  cardMessage: StringFilter
  student: UserWhereInput
  teacher: UserWhereInput
  dateGiven: DateTimeFilter
  counted: BooleanFilter
}

input PbisCardOrderByInput {
  id: OrderDirection
  category: OrderDirection
  cardMessage: OrderDirection
  dateGiven: OrderDirection
  counted: OrderDirection
}

input PbisCardUpdateInput {
  category: String
  cardMessage: String
  student: UserRelateToOneForUpdateInput
  teacher: UserRelateToOneForUpdateInput
  dateGiven: DateTime
  counted: Boolean
}

input PbisCardUpdateArgs {
  where: PbisCardWhereUniqueInput!
  data: PbisCardUpdateInput!
}

input PbisCardCreateInput {
  category: String
  cardMessage: String
  student: UserRelateToOneForCreateInput
  teacher: UserRelateToOneForCreateInput
  dateGiven: DateTime
  counted: Boolean
}

type PbisCollection {
  id: ID!
  name: String
  collectionDate: DateTime
  personalLevelWinners: String
  randomDrawingWinners: String
  taTeamsLevels: String
  taTeamNewLevelWinners: String
  currentPbisTeamGoal: String
  collectedCards: String
  dateModified: DateTime
  lastModifiedBy: User
}

input PbisCollectionWhereUniqueInput {
  id: ID
}

input PbisCollectionWhereInput {
  AND: [PbisCollectionWhereInput!]
  OR: [PbisCollectionWhereInput!]
  NOT: [PbisCollectionWhereInput!]
  id: IDFilter
  name: StringFilter
  collectionDate: DateTimeFilter
  personalLevelWinners: StringFilter
  randomDrawingWinners: StringFilter
  taTeamsLevels: StringFilter
  taTeamNewLevelWinners: StringFilter
  currentPbisTeamGoal: StringFilter
  collectedCards: StringFilter
  dateModified: DateTimeFilter
  lastModifiedBy: UserWhereInput
}

input PbisCollectionOrderByInput {
  id: OrderDirection
  name: OrderDirection
  collectionDate: OrderDirection
  personalLevelWinners: OrderDirection
  randomDrawingWinners: OrderDirection
  taTeamsLevels: OrderDirection
  taTeamNewLevelWinners: OrderDirection
  currentPbisTeamGoal: OrderDirection
  collectedCards: OrderDirection
  dateModified: OrderDirection
}

input PbisCollectionUpdateInput {
  name: String
  collectionDate: DateTime
  personalLevelWinners: String
  randomDrawingWinners: String
  taTeamsLevels: String
  taTeamNewLevelWinners: String
  currentPbisTeamGoal: String
  collectedCards: String
  dateModified: DateTime
  lastModifiedBy: UserRelateToOneForUpdateInput
}

input PbisCollectionUpdateArgs {
  where: PbisCollectionWhereUniqueInput!
  data: PbisCollectionUpdateInput!
}

input PbisCollectionCreateInput {
  name: String
  collectionDate: DateTime
  personalLevelWinners: String
  randomDrawingWinners: String
  taTeamsLevels: String
  taTeamNewLevelWinners: String
  currentPbisTeamGoal: String
  collectedCards: String
  dateModified: DateTime
  lastModifiedBy: UserRelateToOneForCreateInput
}

type PbisTeam {
  id: ID!
  teamName: String
  taTeacher(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  taTeacherCount(where: UserWhereInput! = {}): Int
  uncountedCards: Int
  countedCards: Int
  currentLevel: Int
  numberOfStudents: Int
  averageCardsPerStudent: Int
  dateModified: DateTime
  lastModifiedBy: User
}

input PbisTeamWhereUniqueInput {
  id: ID
}

input PbisTeamWhereInput {
  AND: [PbisTeamWhereInput!]
  OR: [PbisTeamWhereInput!]
  NOT: [PbisTeamWhereInput!]
  id: IDFilter
  teamName: StringFilter
  taTeacher: UserManyRelationFilter
  uncountedCards: IntNullableFilter
  countedCards: IntNullableFilter
  currentLevel: IntNullableFilter
  numberOfStudents: IntNullableFilter
  averageCardsPerStudent: IntNullableFilter
  dateModified: DateTimeFilter
  lastModifiedBy: UserWhereInput
}

input PbisTeamOrderByInput {
  id: OrderDirection
  teamName: OrderDirection
  uncountedCards: OrderDirection
  countedCards: OrderDirection
  currentLevel: OrderDirection
  numberOfStudents: OrderDirection
  averageCardsPerStudent: OrderDirection
  dateModified: OrderDirection
}

input PbisTeamUpdateInput {
  teamName: String
  taTeacher: UserRelateToManyForUpdateInput
  uncountedCards: Int
  countedCards: Int
  currentLevel: Int
  numberOfStudents: Int
  averageCardsPerStudent: Int
  dateModified: DateTime
  lastModifiedBy: UserRelateToOneForUpdateInput
}

input PbisTeamUpdateArgs {
  where: PbisTeamWhereUniqueInput!
  data: PbisTeamUpdateInput!
}

input PbisTeamCreateInput {
  teamName: String
  taTeacher: UserRelateToManyForCreateInput
  uncountedCards: Int
  countedCards: Int
  currentLevel: Int
  numberOfStudents: Int
  averageCardsPerStudent: Int
  dateModified: DateTime
  lastModifiedBy: UserRelateToOneForCreateInput
}

type PbisCollectionDate {
  id: ID!
  collectionDate: DateTime
  randomDrawingWinners(where: RandomDrawingWinWhereInput! = {}, orderBy: [RandomDrawingWinOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: RandomDrawingWinWhereUniqueInput): [RandomDrawingWin!]
  randomDrawingWinnersCount(where: RandomDrawingWinWhereInput! = {}): Int
  personalLevelWinners(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  personalLevelWinnersCount(where: UserWhereInput! = {}): Int
  taNewLevelWinners(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  taNewLevelWinnersCount(where: UserWhereInput! = {}): Int
  staffRandomWinners(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  staffRandomWinnersCount(where: UserWhereInput! = {}): Int
  collectedCards: String
  lastModifiedBy: User
}

input PbisCollectionDateWhereUniqueInput {
  id: ID
}

input PbisCollectionDateWhereInput {
  AND: [PbisCollectionDateWhereInput!]
  OR: [PbisCollectionDateWhereInput!]
  NOT: [PbisCollectionDateWhereInput!]
  id: IDFilter
  collectionDate: DateTimeFilter
  randomDrawingWinners: RandomDrawingWinManyRelationFilter
  personalLevelWinners: UserManyRelationFilter
  taNewLevelWinners: UserManyRelationFilter
  staffRandomWinners: UserManyRelationFilter
  collectedCards: StringFilter
  lastModifiedBy: UserWhereInput
}

input PbisCollectionDateOrderByInput {
  id: OrderDirection
  collectionDate: OrderDirection
  collectedCards: OrderDirection
}

input PbisCollectionDateUpdateInput {
  collectionDate: DateTime
  randomDrawingWinners: RandomDrawingWinRelateToManyForUpdateInput
  personalLevelWinners: UserRelateToManyForUpdateInput
  taNewLevelWinners: UserRelateToManyForUpdateInput
  staffRandomWinners: UserRelateToManyForUpdateInput
  collectedCards: String
  lastModifiedBy: UserRelateToOneForUpdateInput
}

input PbisCollectionDateUpdateArgs {
  where: PbisCollectionDateWhereUniqueInput!
  data: PbisCollectionDateUpdateInput!
}

input PbisCollectionDateCreateInput {
  collectionDate: DateTime
  randomDrawingWinners: RandomDrawingWinRelateToManyForCreateInput
  personalLevelWinners: UserRelateToManyForCreateInput
  taNewLevelWinners: UserRelateToManyForCreateInput
  staffRandomWinners: UserRelateToManyForCreateInput
  collectedCards: String
  lastModifiedBy: UserRelateToOneForCreateInput
}

type RandomDrawingWin {
  id: ID!
  student: User
  collectionDate: PbisCollectionDate
  lastModifiedBy: User
}

input RandomDrawingWinWhereUniqueInput {
  id: ID
}

input RandomDrawingWinWhereInput {
  AND: [RandomDrawingWinWhereInput!]
  OR: [RandomDrawingWinWhereInput!]
  NOT: [RandomDrawingWinWhereInput!]
  id: IDFilter
  student: UserWhereInput
  collectionDate: PbisCollectionDateWhereInput
  lastModifiedBy: UserWhereInput
}

input RandomDrawingWinOrderByInput {
  id: OrderDirection
}

input RandomDrawingWinUpdateInput {
  student: UserRelateToOneForUpdateInput
  collectionDate: PbisCollectionDateRelateToOneForUpdateInput
  lastModifiedBy: UserRelateToOneForUpdateInput
}

input PbisCollectionDateRelateToOneForUpdateInput {
  create: PbisCollectionDateCreateInput
  connect: PbisCollectionDateWhereUniqueInput
  disconnect: Boolean
}

input RandomDrawingWinUpdateArgs {
  where: RandomDrawingWinWhereUniqueInput!
  data: RandomDrawingWinUpdateInput!
}

input RandomDrawingWinCreateInput {
  student: UserRelateToOneForCreateInput
  collectionDate: PbisCollectionDateRelateToOneForCreateInput
  lastModifiedBy: UserRelateToOneForCreateInput
}

input PbisCollectionDateRelateToOneForCreateInput {
  create: PbisCollectionDateCreateInput
  connect: PbisCollectionDateWhereUniqueInput
}

type SortingHatQuestion {
  id: ID!
  question: String
  gryffindorChoice: String
  hufflepuffChoice: String
  ravenclawChoice: String
  slytherinChoice: String
  createdBy: User
}

input SortingHatQuestionWhereUniqueInput {
  id: ID
}

input SortingHatQuestionWhereInput {
  AND: [SortingHatQuestionWhereInput!]
  OR: [SortingHatQuestionWhereInput!]
  NOT: [SortingHatQuestionWhereInput!]
  id: IDFilter
  question: StringFilter
  gryffindorChoice: StringFilter
  hufflepuffChoice: StringFilter
  ravenclawChoice: StringFilter
  slytherinChoice: StringFilter
  createdBy: UserWhereInput
}

input SortingHatQuestionOrderByInput {
  id: OrderDirection
  question: OrderDirection
  gryffindorChoice: OrderDirection
  hufflepuffChoice: OrderDirection
  ravenclawChoice: OrderDirection
  slytherinChoice: OrderDirection
}

input SortingHatQuestionUpdateInput {
  question: String
  gryffindorChoice: String
  hufflepuffChoice: String
  ravenclawChoice: String
  slytherinChoice: String
  createdBy: UserRelateToOneForUpdateInput
}

input SortingHatQuestionUpdateArgs {
  where: SortingHatQuestionWhereUniqueInput!
  data: SortingHatQuestionUpdateInput!
}

input SortingHatQuestionCreateInput {
  question: String
  gryffindorChoice: String
  hufflepuffChoice: String
  ravenclawChoice: String
  slytherinChoice: String
  createdBy: UserRelateToOneForCreateInput
}

type StudentFocus {
  id: ID!
  comments: String
  category: String
  student: User
  teacher: User
  dateCreated: DateTime
}

input StudentFocusWhereUniqueInput {
  id: ID
}

input StudentFocusWhereInput {
  AND: [StudentFocusWhereInput!]
  OR: [StudentFocusWhereInput!]
  NOT: [StudentFocusWhereInput!]
  id: IDFilter
  comments: StringFilter
  category: StringFilter
  student: UserWhereInput
  teacher: UserWhereInput
  dateCreated: DateTimeFilter
}

input StudentFocusOrderByInput {
  id: OrderDirection
  comments: OrderDirection
  category: OrderDirection
  dateCreated: OrderDirection
}

input StudentFocusUpdateInput {
  comments: String
  category: String
  student: UserRelateToOneForUpdateInput
  teacher: UserRelateToOneForUpdateInput
  dateCreated: DateTime
}

input StudentFocusUpdateArgs {
  where: StudentFocusWhereUniqueInput!
  data: StudentFocusUpdateInput!
}

input StudentFocusCreateInput {
  comments: String
  category: String
  student: UserRelateToOneForCreateInput
  teacher: UserRelateToOneForCreateInput
  dateCreated: DateTime
}

type TrimesterAward {
  id: ID!
  howl: String
  trimester: String
  date: DateTime
  student: User
  teacher: User
}

input TrimesterAwardWhereUniqueInput {
  id: ID
}

input TrimesterAwardWhereInput {
  AND: [TrimesterAwardWhereInput!]
  OR: [TrimesterAwardWhereInput!]
  NOT: [TrimesterAwardWhereInput!]
  id: IDFilter
  howl: StringFilter
  trimester: StringNullableFilter
  date: DateTimeFilter
  student: UserWhereInput
  teacher: UserWhereInput
}

input TrimesterAwardOrderByInput {
  id: OrderDirection
  howl: OrderDirection
  trimester: OrderDirection
  date: OrderDirection
}

input TrimesterAwardUpdateInput {
  howl: String
  trimester: String
  date: DateTime
  student: UserRelateToOneForUpdateInput
  teacher: UserRelateToOneForUpdateInput
}

input TrimesterAwardUpdateArgs {
  where: TrimesterAwardWhereUniqueInput!
  data: TrimesterAwardUpdateInput!
}

input TrimesterAwardCreateInput {
  howl: String
  trimester: String
  date: DateTime
  student: UserRelateToOneForCreateInput
  teacher: UserRelateToOneForCreateInput
}

type Video {
  id: ID!
  name: String
  description: String
  onHomePage: Boolean
  type: String
  link: String
}

input VideoWhereUniqueInput {
  id: ID
}

input VideoWhereInput {
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
  id: IDFilter
  name: StringFilter
  description: StringFilter
  onHomePage: BooleanFilter
  type: StringFilter
  link: StringFilter
}

input VideoOrderByInput {
  id: OrderDirection
  name: OrderDirection
  description: OrderDirection
  onHomePage: OrderDirection
  type: OrderDirection
  link: OrderDirection
}

input VideoUpdateInput {
  name: String
  description: String
  onHomePage: Boolean
  type: String
  link: String
}

input VideoUpdateArgs {
  where: VideoWhereUniqueInput!
  data: VideoUpdateInput!
}

input VideoCreateInput {
  name: String
  description: String
  onHomePage: Boolean
  type: String
  link: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createBirthday(data: BirthdayCreateInput!): Birthday
  createBirthdays(data: [BirthdayCreateInput!]!): [Birthday]
  updateBirthday(where: BirthdayWhereUniqueInput!, data: BirthdayUpdateInput!): Birthday
  updateBirthdays(data: [BirthdayUpdateArgs!]!): [Birthday]
  deleteBirthday(where: BirthdayWhereUniqueInput!): Birthday
  deleteBirthdays(where: [BirthdayWhereUniqueInput!]!): [Birthday]
  createBugReport(data: BugReportCreateInput!): BugReport
  createBugReports(data: [BugReportCreateInput!]!): [BugReport]
  updateBugReport(where: BugReportWhereUniqueInput!, data: BugReportUpdateInput!): BugReport
  updateBugReports(data: [BugReportUpdateArgs!]!): [BugReport]
  deleteBugReport(where: BugReportWhereUniqueInput!): BugReport
  deleteBugReports(where: [BugReportWhereUniqueInput!]!): [BugReport]
  createBullying(data: BullyingCreateInput!): Bullying
  createBullyings(data: [BullyingCreateInput!]!): [Bullying]
  updateBullying(where: BullyingWhereUniqueInput!, data: BullyingUpdateInput!): Bullying
  updateBullyings(data: [BullyingUpdateArgs!]!): [Bullying]
  deleteBullying(where: BullyingWhereUniqueInput!): Bullying
  deleteBullyings(where: [BullyingWhereUniqueInput!]!): [Bullying]
  createCallback(data: CallbackCreateInput!): Callback
  createCallbacks(data: [CallbackCreateInput!]!): [Callback]
  updateCallback(where: CallbackWhereUniqueInput!, data: CallbackUpdateInput!): Callback
  updateCallbacks(data: [CallbackUpdateArgs!]!): [Callback]
  deleteCallback(where: CallbackWhereUniqueInput!): Callback
  deleteCallbacks(where: [CallbackWhereUniqueInput!]!): [Callback]
  createCalendar(data: CalendarCreateInput!): Calendar
  createCalendars(data: [CalendarCreateInput!]!): [Calendar]
  updateCalendar(where: CalendarWhereUniqueInput!, data: CalendarUpdateInput!): Calendar
  updateCalendars(data: [CalendarUpdateArgs!]!): [Calendar]
  deleteCalendar(where: CalendarWhereUniqueInput!): Calendar
  deleteCalendars(where: [CalendarWhereUniqueInput!]!): [Calendar]
  createCellPhoneViolation(data: CellPhoneViolationCreateInput!): CellPhoneViolation
  createCellPhoneViolations(data: [CellPhoneViolationCreateInput!]!): [CellPhoneViolation]
  updateCellPhoneViolation(where: CellPhoneViolationWhereUniqueInput!, data: CellPhoneViolationUpdateInput!): CellPhoneViolation
  updateCellPhoneViolations(data: [CellPhoneViolationUpdateArgs!]!): [CellPhoneViolation]
  deleteCellPhoneViolation(where: CellPhoneViolationWhereUniqueInput!): CellPhoneViolation
  deleteCellPhoneViolations(where: [CellPhoneViolationWhereUniqueInput!]!): [CellPhoneViolation]
  createChromebookCheck(data: ChromebookCheckCreateInput!): ChromebookCheck
  createChromebookChecks(data: [ChromebookCheckCreateInput!]!): [ChromebookCheck]
  updateChromebookCheck(where: ChromebookCheckWhereUniqueInput!, data: ChromebookCheckUpdateInput!): ChromebookCheck
  updateChromebookChecks(data: [ChromebookCheckUpdateArgs!]!): [ChromebookCheck]
  deleteChromebookCheck(where: ChromebookCheckWhereUniqueInput!): ChromebookCheck
  deleteChromebookChecks(where: [ChromebookCheckWhereUniqueInput!]!): [ChromebookCheck]
  createChromebookAssignment(data: ChromebookAssignmentCreateInput!): ChromebookAssignment
  createChromebookAssignments(data: [ChromebookAssignmentCreateInput!]!): [ChromebookAssignment]
  updateChromebookAssignment(where: ChromebookAssignmentWhereUniqueInput!, data: ChromebookAssignmentUpdateInput!): ChromebookAssignment
  updateChromebookAssignments(data: [ChromebookAssignmentUpdateArgs!]!): [ChromebookAssignment]
  deleteChromebookAssignment(where: ChromebookAssignmentWhereUniqueInput!): ChromebookAssignment
  deleteChromebookAssignments(where: [ChromebookAssignmentWhereUniqueInput!]!): [ChromebookAssignment]
  createDiscipline(data: DisciplineCreateInput!): Discipline
  createDisciplines(data: [DisciplineCreateInput!]!): [Discipline]
  updateDiscipline(where: DisciplineWhereUniqueInput!, data: DisciplineUpdateInput!): Discipline
  updateDisciplines(data: [DisciplineUpdateArgs!]!): [Discipline]
  deleteDiscipline(where: DisciplineWhereUniqueInput!): Discipline
  deleteDisciplines(where: [DisciplineWhereUniqueInput!]!): [Discipline]
  createLink(data: LinkCreateInput!): Link
  createLinks(data: [LinkCreateInput!]!): [Link]
  updateLink(where: LinkWhereUniqueInput!, data: LinkUpdateInput!): Link
  updateLinks(data: [LinkUpdateArgs!]!): [Link]
  deleteLink(where: LinkWhereUniqueInput!): Link
  deleteLinks(where: [LinkWhereUniqueInput!]!): [Link]
  createMessage(data: MessageCreateInput!): Message
  createMessages(data: [MessageCreateInput!]!): [Message]
  updateMessage(where: MessageWhereUniqueInput!, data: MessageUpdateInput!): Message
  updateMessages(data: [MessageUpdateArgs!]!): [Message]
  deleteMessage(where: MessageWhereUniqueInput!): Message
  deleteMessages(where: [MessageWhereUniqueInput!]!): [Message]
  createPbisCard(data: PbisCardCreateInput!): PbisCard
  createPbisCards(data: [PbisCardCreateInput!]!): [PbisCard]
  updatePbisCard(where: PbisCardWhereUniqueInput!, data: PbisCardUpdateInput!): PbisCard
  updatePbisCards(data: [PbisCardUpdateArgs!]!): [PbisCard]
  deletePbisCard(where: PbisCardWhereUniqueInput!): PbisCard
  deletePbisCards(where: [PbisCardWhereUniqueInput!]!): [PbisCard]
  createPbisCollection(data: PbisCollectionCreateInput!): PbisCollection
  createPbisCollections(data: [PbisCollectionCreateInput!]!): [PbisCollection]
  updatePbisCollection(where: PbisCollectionWhereUniqueInput!, data: PbisCollectionUpdateInput!): PbisCollection
  updatePbisCollections(data: [PbisCollectionUpdateArgs!]!): [PbisCollection]
  deletePbisCollection(where: PbisCollectionWhereUniqueInput!): PbisCollection
  deletePbisCollections(where: [PbisCollectionWhereUniqueInput!]!): [PbisCollection]
  createPbisTeam(data: PbisTeamCreateInput!): PbisTeam
  createPbisTeams(data: [PbisTeamCreateInput!]!): [PbisTeam]
  updatePbisTeam(where: PbisTeamWhereUniqueInput!, data: PbisTeamUpdateInput!): PbisTeam
  updatePbisTeams(data: [PbisTeamUpdateArgs!]!): [PbisTeam]
  deletePbisTeam(where: PbisTeamWhereUniqueInput!): PbisTeam
  deletePbisTeams(where: [PbisTeamWhereUniqueInput!]!): [PbisTeam]
  createPbisCollectionDate(data: PbisCollectionDateCreateInput!): PbisCollectionDate
  createPbisCollectionDates(data: [PbisCollectionDateCreateInput!]!): [PbisCollectionDate]
  updatePbisCollectionDate(where: PbisCollectionDateWhereUniqueInput!, data: PbisCollectionDateUpdateInput!): PbisCollectionDate
  updatePbisCollectionDates(data: [PbisCollectionDateUpdateArgs!]!): [PbisCollectionDate]
  deletePbisCollectionDate(where: PbisCollectionDateWhereUniqueInput!): PbisCollectionDate
  deletePbisCollectionDates(where: [PbisCollectionDateWhereUniqueInput!]!): [PbisCollectionDate]
  createRandomDrawingWin(data: RandomDrawingWinCreateInput!): RandomDrawingWin
  createRandomDrawingWins(data: [RandomDrawingWinCreateInput!]!): [RandomDrawingWin]
  updateRandomDrawingWin(where: RandomDrawingWinWhereUniqueInput!, data: RandomDrawingWinUpdateInput!): RandomDrawingWin
  updateRandomDrawingWins(data: [RandomDrawingWinUpdateArgs!]!): [RandomDrawingWin]
  deleteRandomDrawingWin(where: RandomDrawingWinWhereUniqueInput!): RandomDrawingWin
  deleteRandomDrawingWins(where: [RandomDrawingWinWhereUniqueInput!]!): [RandomDrawingWin]
  createSortingHatQuestion(data: SortingHatQuestionCreateInput!): SortingHatQuestion
  createSortingHatQuestions(data: [SortingHatQuestionCreateInput!]!): [SortingHatQuestion]
  updateSortingHatQuestion(where: SortingHatQuestionWhereUniqueInput!, data: SortingHatQuestionUpdateInput!): SortingHatQuestion
  updateSortingHatQuestions(data: [SortingHatQuestionUpdateArgs!]!): [SortingHatQuestion]
  deleteSortingHatQuestion(where: SortingHatQuestionWhereUniqueInput!): SortingHatQuestion
  deleteSortingHatQuestions(where: [SortingHatQuestionWhereUniqueInput!]!): [SortingHatQuestion]
  createStudentFocus(data: StudentFocusCreateInput!): StudentFocus
  createStudentFoci(data: [StudentFocusCreateInput!]!): [StudentFocus]
  updateStudentFocus(where: StudentFocusWhereUniqueInput!, data: StudentFocusUpdateInput!): StudentFocus
  updateStudentFoci(data: [StudentFocusUpdateArgs!]!): [StudentFocus]
  deleteStudentFocus(where: StudentFocusWhereUniqueInput!): StudentFocus
  deleteStudentFoci(where: [StudentFocusWhereUniqueInput!]!): [StudentFocus]
  createTrimesterAward(data: TrimesterAwardCreateInput!): TrimesterAward
  createTrimesterAwards(data: [TrimesterAwardCreateInput!]!): [TrimesterAward]
  updateTrimesterAward(where: TrimesterAwardWhereUniqueInput!, data: TrimesterAwardUpdateInput!): TrimesterAward
  updateTrimesterAwards(data: [TrimesterAwardUpdateArgs!]!): [TrimesterAward]
  deleteTrimesterAward(where: TrimesterAwardWhereUniqueInput!): TrimesterAward
  deleteTrimesterAwards(where: [TrimesterAwardWhereUniqueInput!]!): [TrimesterAward]
  createVideo(data: VideoCreateInput!): Video
  createVideos(data: [VideoCreateInput!]!): [Video]
  updateVideo(where: VideoWhereUniqueInput!, data: VideoUpdateInput!): Video
  updateVideos(data: [VideoUpdateArgs!]!): [Video]
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteVideos(where: [VideoWhereUniqueInput!]!): [Video]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
  sendUserPasswordResetLink(email: String!): Boolean!
  redeemUserPasswordResetToken(email: String!, token: String!, password: String!): RedeemUserPasswordResetTokenResult
  recalculateCallback(callbackId: ID!): Callback
  sendEmail(emailData: JSON): Boolean
  updateStudentSchedules(studentScheduleData: JSON): String
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type RedeemUserPasswordResetTokenResult {
  code: PasswordResetRedemptionErrorCode!
  message: String!
}

enum PasswordResetRedemptionErrorCode {
  FAILURE
  TOKEN_EXPIRED
  TOKEN_REDEEMED
}

type Query {
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  birthdays(where: BirthdayWhereInput! = {}, orderBy: [BirthdayOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: BirthdayWhereUniqueInput): [Birthday!]
  birthday(where: BirthdayWhereUniqueInput!): Birthday
  birthdaysCount(where: BirthdayWhereInput! = {}): Int
  bugReports(where: BugReportWhereInput! = {}, orderBy: [BugReportOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: BugReportWhereUniqueInput): [BugReport!]
  bugReport(where: BugReportWhereUniqueInput!): BugReport
  bugReportsCount(where: BugReportWhereInput! = {}): Int
  bullyings(where: BullyingWhereInput! = {}, orderBy: [BullyingOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: BullyingWhereUniqueInput): [Bullying!]
  bullying(where: BullyingWhereUniqueInput!): Bullying
  bullyingsCount(where: BullyingWhereInput! = {}): Int
  callbacks(where: CallbackWhereInput! = {}, orderBy: [CallbackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CallbackWhereUniqueInput): [Callback!]
  callback(where: CallbackWhereUniqueInput!): Callback
  callbacksCount(where: CallbackWhereInput! = {}): Int
  calendars(where: CalendarWhereInput! = {}, orderBy: [CalendarOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CalendarWhereUniqueInput): [Calendar!]
  calendar(where: CalendarWhereUniqueInput!): Calendar
  calendarsCount(where: CalendarWhereInput! = {}): Int
  cellPhoneViolations(where: CellPhoneViolationWhereInput! = {}, orderBy: [CellPhoneViolationOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CellPhoneViolationWhereUniqueInput): [CellPhoneViolation!]
  cellPhoneViolation(where: CellPhoneViolationWhereUniqueInput!): CellPhoneViolation
  cellPhoneViolationsCount(where: CellPhoneViolationWhereInput! = {}): Int
  chromebookChecks(where: ChromebookCheckWhereInput! = {}, orderBy: [ChromebookCheckOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ChromebookCheckWhereUniqueInput): [ChromebookCheck!]
  chromebookCheck(where: ChromebookCheckWhereUniqueInput!): ChromebookCheck
  chromebookChecksCount(where: ChromebookCheckWhereInput! = {}): Int
  chromebookAssignments(where: ChromebookAssignmentWhereInput! = {}, orderBy: [ChromebookAssignmentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ChromebookAssignmentWhereUniqueInput): [ChromebookAssignment!]
  chromebookAssignment(where: ChromebookAssignmentWhereUniqueInput!): ChromebookAssignment
  chromebookAssignmentsCount(where: ChromebookAssignmentWhereInput! = {}): Int
  disciplines(where: DisciplineWhereInput! = {}, orderBy: [DisciplineOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: DisciplineWhereUniqueInput): [Discipline!]
  discipline(where: DisciplineWhereUniqueInput!): Discipline
  disciplinesCount(where: DisciplineWhereInput! = {}): Int
  links(where: LinkWhereInput! = {}, orderBy: [LinkOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: LinkWhereUniqueInput): [Link!]
  link(where: LinkWhereUniqueInput!): Link
  linksCount(where: LinkWhereInput! = {}): Int
  messages(where: MessageWhereInput! = {}, orderBy: [MessageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MessageWhereUniqueInput): [Message!]
  message(where: MessageWhereUniqueInput!): Message
  messagesCount(where: MessageWhereInput! = {}): Int
  pbisCards(where: PbisCardWhereInput! = {}, orderBy: [PbisCardOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PbisCardWhereUniqueInput): [PbisCard!]
  pbisCard(where: PbisCardWhereUniqueInput!): PbisCard
  pbisCardsCount(where: PbisCardWhereInput! = {}): Int
  pbisCollections(where: PbisCollectionWhereInput! = {}, orderBy: [PbisCollectionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PbisCollectionWhereUniqueInput): [PbisCollection!]
  pbisCollection(where: PbisCollectionWhereUniqueInput!): PbisCollection
  pbisCollectionsCount(where: PbisCollectionWhereInput! = {}): Int
  pbisTeams(where: PbisTeamWhereInput! = {}, orderBy: [PbisTeamOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PbisTeamWhereUniqueInput): [PbisTeam!]
  pbisTeam(where: PbisTeamWhereUniqueInput!): PbisTeam
  pbisTeamsCount(where: PbisTeamWhereInput! = {}): Int
  pbisCollectionDates(where: PbisCollectionDateWhereInput! = {}, orderBy: [PbisCollectionDateOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PbisCollectionDateWhereUniqueInput): [PbisCollectionDate!]
  pbisCollectionDate(where: PbisCollectionDateWhereUniqueInput!): PbisCollectionDate
  pbisCollectionDatesCount(where: PbisCollectionDateWhereInput! = {}): Int
  randomDrawingWins(where: RandomDrawingWinWhereInput! = {}, orderBy: [RandomDrawingWinOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: RandomDrawingWinWhereUniqueInput): [RandomDrawingWin!]
  randomDrawingWin(where: RandomDrawingWinWhereUniqueInput!): RandomDrawingWin
  randomDrawingWinsCount(where: RandomDrawingWinWhereInput! = {}): Int
  sortingHatQuestions(where: SortingHatQuestionWhereInput! = {}, orderBy: [SortingHatQuestionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SortingHatQuestionWhereUniqueInput): [SortingHatQuestion!]
  sortingHatQuestion(where: SortingHatQuestionWhereUniqueInput!): SortingHatQuestion
  sortingHatQuestionsCount(where: SortingHatQuestionWhereInput! = {}): Int
  studentFoci(where: StudentFocusWhereInput! = {}, orderBy: [StudentFocusOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: StudentFocusWhereUniqueInput): [StudentFocus!]
  studentFocus(where: StudentFocusWhereUniqueInput!): StudentFocus
  studentFociCount(where: StudentFocusWhereInput! = {}): Int
  trimesterAwards(where: TrimesterAwardWhereInput! = {}, orderBy: [TrimesterAwardOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TrimesterAwardWhereUniqueInput): [TrimesterAward!]
  trimesterAward(where: TrimesterAwardWhereUniqueInput!): TrimesterAward
  trimesterAwardsCount(where: TrimesterAwardWhereInput! = {}): Int
  videos(where: VideoWhereInput! = {}, orderBy: [VideoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: VideoWhereUniqueInput): [Video!]
  video(where: VideoWhereUniqueInput!): Video
  videosCount(where: VideoWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
  validateUserPasswordResetToken(email: String!, token: String!): ValidateUserPasswordResetTokenResult
}

union AuthenticatedItem = User

type ValidateUserPasswordResetTokenResult {
  code: PasswordResetRedemptionErrorCode!
  message: String!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
